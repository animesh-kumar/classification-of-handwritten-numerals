load project2_data.mat;
% This code is taken from the MATLAB website
% http://www.mathworks.com/help/nnet/gs/classify-patterns-with-a-neural-network.html#f9-26645

% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by NPRTOOL

inputs = Input_Matrix;
targets = Target_Matrix;

% Create a Pattern Recognition Network
hiddenLayerSize = 1;
net = patternnet(hiddenLayerSize);


% Set up Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;


% Train the Network
[net,tr] = train(net,inputs',targets');

% Test the Network
outputs = net(inputs');
new_target = outputs';
missclassification = 0;
size = size(new_target,1);
for i=1:1:size
    % Occurence of 1 in Target matrix
    target_index = find(targets(i,:) == 1);
    % Occurent of max value in calculated matrix
    calculated_index = find(new_target(i,:) == max(new_target(i,:)));
    if(target_index~=calculated_index)
        missclassification = missclassification + 1 ;    
    end
end

%errors = gsubtract(targets',outputs);
%performance = perform(net,targets',outputs);

disp(missclassification);
% View the Network
view(net)

% Plots
% Uncomment these lines to enable various plots.
% figure, plotperform(tr)
% figure, plottrainstate(tr)
% figure, plotconfusion(targets,outputs)
% figure, ploterrhist(errors)